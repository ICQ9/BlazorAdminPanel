@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<PageTitle>BlazorAuthClient</PageTitle>

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <div class="sidebar">
        <NavMenu />
    </div>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<style>
    .sidebar {
        width: 250px;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        overflow-y: auto;
        background-color: var(--mud-palette-background);
        border-right: 1px solid var(--mud-palette-divider);
    }

    .mud-main-content {
        margin-left: 250px;
        padding: 2rem;
    }
</style>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var currentUri = Navigation.Uri;
        
        // If user is not authenticated and not on login/register pages, redirect to login
        if (!authState.User.Identity.IsAuthenticated &&
            !currentUri.EndsWith("/login", StringComparison.OrdinalIgnoreCase) &&
            !currentUri.EndsWith("/register", StringComparison.OrdinalIgnoreCase))
        {
            Navigation.NavigateTo("/login", true);
        }
    }
}
